---
title: "eegAnalysis"
format: html
editor: visual
---

```{r, echo = FALSE, results='hide', message = FALSE}
library(tidyverse)
library(tidymodels)
library(dplyr)
library(stringr)
library(corrplot)
```

```{r, echo = FALSE, results='hide'}
#| label: read-files
anova <- read.csv("anova_data.csv")
nyc <- read.csv("nyc_data_scored.csv")
```

```{r, echo = FALSE, results='hide'}
#| label: wrangle-thenmerge
anova$participants <- sub("KORU00", "", anova$participants)
anova$participants <- sub("KORU0", "", anova$participants)

merged = merge(x = anova, y = nyc, by.x = "participants", by.y = "koru_id")

```

```{r, echo = FALSE, results='hide'}
#| label: filter-nyc
# nyc_rest = nyc|>
#   filter(condition)

# filtered_med <- grep("_med$|koru_id$", names(nyc), value = TRUE)
# nyc_med <- nyc[, filtered_med]
# 
# filtered_rest <- grep("_rest$|koru_id$", names(nyc), value = TRUE)
# nyc_rest <- nyc[, filtered_rest]
# 
# med_long <- pivot_longer(nyc_med, cols = -koru_id)
# 

# ggplot(med_long, aes(x = name, y = value)) +
#   geom_bar(stat = "identity", position = "dodge") +
#   labs(title = "Bar Plot of Columns",
#        x = "Columns", y = "Values") 
```

everything in nyc

```{r}
nyc_long <- pivot_longer(nyc, cols = -koru_id)


nyc_long$group <- ifelse(grepl("_med$", nyc_long$name), "_med", "_rest")

ggplot(nyc_long, aes(x = name, y = value, fill = group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Bar Plot of Columns",
       x = "Columns", y = "Values") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
#| label: merged-medrest
merged_wide <- pivot_wider(merged, names_from = "microstate", values_from = "coverage")

merged_med <- filter(merged_wide, condition == "med")
merged_rest <- filter(merged_wide, condition == "rest")


```

```{r}
#|label: correlation-matrix-med

correlation_matrix <- cor(merged_med[, c("past_med", "positive_med", "future_med", "negative_med", "friends_med", "A", "B", "C", "D", "F")])

tidy(correlation_matrix)
corrplot(correlation_matrix, method = "color")
```

```{r}
#|label: correlation-matrix-rest

correlation_matrix <- cor(merged_rest[, c("past_rest", "positive_rest", "future_rest", "negative_rest", "friends_rest", "A", "B", "C", "D", "F")])

tidy(correlation_matrix)
corrplot(correlation_matrix, method = "color")
```

```{r}

mednyc_col <- c("past_med", "positive_med", "future_med", "negative_med", "friends_med")

# List of coverage columns
medcoverage_col <- c("A", "B", "C", "D", "F")

results <- matrix(NA, nrow = length(mednyc_col), ncol = length(medcoverage_col))

# Iterate over each pair of variables and calculate the correlation
for (i in seq_along(mednyc_col)) {
  for (j in seq_along(medcoverage_col)) {
    # Calculate correlation coefficient
    result <- cor.test(merged_med[[mednyc_col[i]]], merged_med[[medcoverage_col[j]]])
    # Store the correlation coefficient in the results matrix
    results[i, j] <- result$estimate
  }
}

# Convert results matrix into a data frame
results_df <- as.data.frame(results)

# Add row names (mednyc_col) and column names (medcoverage_col)
rownames(results_df) <- mednyc_col
colnames(results_df) <- medcoverage_col

results_df
```

```{r}


```

```{r}

```
